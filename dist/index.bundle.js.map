{"version":3,"file":"index.bundle.js","mappings":"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","sources":["webpack://asteroidsjs/./src/lib/canvas.js","webpack://asteroidsjs/./src/models/entity.js","webpack://asteroidsjs/./src/models/bullet.js","webpack://asteroidsjs/./src/models/asteroid.js","webpack://asteroidsjs/./src/models/sound.js","webpack://asteroidsjs/./src/index.js","webpack://asteroidsjs/./src/models/spaceship.js","webpack://asteroidsjs/./src/models/difficulty.js"],"sourcesContent":["function Canvas(id) {\r\n    this.canvas = document.getElementById(id);\r\n    this.context = this.canvas.getContext('2d');\r\n    this.width = this.canvas.width;\r\n    this.height = this.canvas.height;\r\n    \r\n\r\n    this.setBackground = function(color) {\r\n        this.context.fillStyle = color;\r\n        this.context.fillRect(0, 0, this.width, this.height);\r\n    }\r\n\r\n    this.drawSpaceship = function(spaceship) {\r\n        this.context.fillStyle = spaceship.color;\r\n        this.context.translate(spaceship.x, spaceship.y);\r\n        this.context.rotate(spaceship.orientation * Math.PI / 180);\r\n        this.context.beginPath();\r\n        this.context.moveTo(0, -spaceship.h/2);\r\n        this.context.lineTo(-spaceship.w/2, spaceship.h/2);\r\n        this.context.lineTo(spaceship.w/2, spaceship.h/2);\r\n        this.context.fill();\r\n        this.context.rotate(-spaceship.orientation * Math.PI / 180);\r\n        this.context.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    }\r\n\r\n    this.drawAsteroids = function(ast, bounds) {\r\n        this.context.strokeStyle = '#FFFFFF';\r\n        this.context.lineWidth = 1;\r\n        this.context.translate(ast.x, ast.y);\r\n        this.context.beginPath();\r\n        this.context.moveTo(bounds[0].x, bounds[0].y);\r\n        for (let i = 1; i < ast.numSides + 1; i ++) \r\n        {\r\n            this.context.lineTo(bounds[i].x, bounds[i].y);\r\n        };\r\n        this.context.stroke();\r\n        this.context.setTransform(1, 0, 0, 1, 0, 0);\r\n    }\r\n\r\n    this.drawBullets = function(bul) {\r\n        this.context.fillStyle = '#FFFFFF';\r\n\r\n        this.context.translate(bul.x, bul.y);\r\n        this.context.beginPath();\r\n        this.context.lineTo(-bul.w/2, -bul.h/2);\r\n        this.context.lineTo(bul.w/2, -bul.h/2);\r\n        this.context.lineTo(bul.w/2, bul.h/2);\r\n        this.context.lineTo(-bul.w/2, bul.h/2);\r\n        this.context.fill();\r\n        this.context.setTransform(1, 0, 0, 1, 0, 0);\r\n    }\r\n\r\n    this.drawScore = function(score) {\r\n        this.context.font = \"20px Turret Road\";\r\n        this.context.fillStyle = \"white\";\r\n        this.context.textAlign = \"center\";\r\n        this.context.fillText(score, this.width / 2, 20);\r\n    }\r\n\r\n    this.drawHigh = function(score) {\r\n        this.context.font = \"20px Turret Road\";\r\n        this.context.fillStyle = \"white\";\r\n        this.context.textAlign = \"right\";\r\n        this.context.fillText(score, this.width - 5, 20);\r\n    }\r\n\r\n    this.drawLives = function(lives, spaceship) {\r\n        var xLoc = spaceship.w;\r\n\r\n        for (let i = 0; i < lives; i++) {\r\n            this.context.fillStyle = spaceship.color;\r\n            this.context.translate(xLoc, spaceship.h / 2 + 5);\r\n            this.context.beginPath();\r\n            this.context.moveTo(0, -spaceship.h/2);\r\n            this.context.lineTo(-spaceship.w/2, spaceship.h/2);\r\n            this.context.lineTo(spaceship.w/2, spaceship.h/2);\r\n            this.context.fill();\r\n            this.context.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n            xLoc += spaceship.w * 2;\r\n        }\r\n    }\r\n\r\n    this.drawPaused = function(message) {\r\n        this.context.font = \"20px Turret Road\";\r\n        this.context.fillStyle = \"white\";\r\n        this.context.textAlign = \"center\";\r\n        this.context.fillText(message, this.width / 2, this.height / 2);\r\n    }\r\n\r\n    this.drawDiff = function(diff) {\r\n        var xpos;\r\n        var rectW;\r\n        if (diff == 1) {\r\n            xpos = this.width / 3;\r\n            rectW = 60;\r\n        } else if (diff ==2) {\r\n            xpos = this.width / 2 - 10;\r\n            rectW = 80;\r\n        } else {\r\n            xpos = this.width * 2 / 3;\r\n            rectW = 60;\r\n        }\r\n        \r\n        this.context.beginPath();\r\n        this.context.strokeStyle = 'white';\r\n        this.context.lineWidth = 1.2;\r\n        this.context.rect(xpos - 30, this.height / 2 + 8, rectW, 30);\r\n        this.context.stroke(); \r\n\r\n        this.context.font = \"20px Turret Road\";\r\n        this.context.fillStyle = \"white\";\r\n        this.context.textAlign = \"center\";\r\n        this.context.fillText(\"Easy\", this.width / 3, this.height / 2 + 30);\r\n        this.context.fillText(\"Normal\", this.width / 2, this.height / 2 + 30);\r\n        this.context.fillText(\"Hard\", this.width * 2 / 3, this.height / 2 + 30);\r\n\r\n  \r\n    }\r\n}\r\n\r\nexport default Canvas;","class Entity {\r\n    constructor(x, y, dx, dy, orientation, jerk) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.dx = dx;\r\n        this.dy = dy;\r\n        this.jerk = jerk;\r\n        this.orientation = orientation;\r\n        this.color = \"#000000\";\r\n        this.maxD = .5;\r\n    }\r\n\r\n    getX() {\r\n        return this.x;\r\n    }\r\n\r\n    getY() {\r\n        return this.y;\r\n    }\r\n\r\n    setX(x) {\r\n        this.x = x;\r\n    }\r\n\r\n    setY(y) {\r\n        this.y = y;\r\n    }\r\n\r\n    setO(o) {\r\n        this.orientation = o;\r\n    }\r\n\r\n    setDx(dx) {\r\n        this.dx = dx;\r\n    }\r\n\r\n    setDy(dy) {\r\n        this.dy = dy;\r\n    }\r\n\r\n    updatePosition(width, height, dt) {\r\n        this.x += this.dx * dt;\r\n        this.y += this.dy * dt;\r\n\r\n        if (this.x < 0) {\r\n            this.setX(width);\r\n        }\r\n        if (this.x > width) {\r\n            this.setX(0);\r\n        }\r\n    \r\n        if (this.y < 0) {\r\n            this.setY(height);\r\n        } \r\n        if (this.y > height) {\r\n            this.setY(0);\r\n        }\r\n    }\r\n\r\n    accelerate(dt) {\r\n        var deg = this.mathifyOrientation();\r\n        this.dx += (Math.cos(deg) / this.jerk) * dt;\r\n        this.dy -= (Math.sin(deg) / this.jerk) * dt;\r\n\r\n        // Max Speed Check\r\n        if (this.dx > this.maxD) {\r\n            this.dx = this.maxD;\r\n        }\r\n        if (this.dx < -this.maxD) {\r\n            this.dx = -this.maxD;\r\n        }\r\n        if (this.dy > this.maxD) {\r\n            this.dy = this.maxD;\r\n        }\r\n        if (this.dy < -this.maxD) {\r\n            this.dy = -this.maxD;\r\n        }\r\n    }\r\n\r\n    decelerate(dt) {\r\n        var deg = this.mathifyOrientation();\r\n        this.dx -= (Math.cos(deg) / this.jerk) * dt;\r\n        this.dy += (Math.sin(deg) / this.jerk) * dt;\r\n\r\n        // Max Speed Check\r\n        if (this.dx > this.maxD) {\r\n            this.dx = this.maxD;\r\n        }\r\n        if (this.dx < -this.maxD) {\r\n            this.dx = -this.maxD;\r\n        }\r\n        if (this.dy > this.maxD) {\r\n            this.dy = this.maxD;\r\n        }\r\n        if (this.dy < -this.maxD) {\r\n            this.dy = -this.maxD;\r\n        }\r\n    }\r\n\r\n    mathifyOrientation() {\r\n        // Convert to degrees, then convert to radians.\r\n        return (90 - this.orientation) * (Math.PI / 180);\r\n    }\r\n\r\n    // Positive rotates right, Negative rotates left\r\n    rotate(amount) {\r\n        this.orientation += amount;\r\n    }\r\n\r\n    checkCollision(entity) {\r\n        var thisBounds = this.getBounds();\r\n\r\n        for (let i = 0; i < thisBounds.length; i++) {\r\n            if (thisBounds[i].x > (entity.x - entity.w / 2) &&\r\n                thisBounds[i].x < (entity.x + entity.w / 2) &&\r\n                thisBounds[i].y > (entity.y - entity.h / 2) &&\r\n                thisBounds[i].y < (entity.y + entity.h / 2)) {\r\n                    return true;\r\n                }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default Entity;","import Entity from './entity';\r\n\r\nclass Bullet extends Entity {\r\n    constructor(x, y, dx, dy, frame) {\r\n        super(x, y, dx, dy, 0, 0);\r\n        this.h = 4;\r\n        this.w = 4;\r\n        this.frame = frame;\r\n        this.time = 0;\r\n    }\r\n\r\n    // Bound getter for collisions\r\n    getBounds() {\r\n        var p0 = {\r\n            x: this.x - this.w / 2,\r\n            y: this.y - this.h / 2\r\n        }\r\n        var p1 = {\r\n            x: this.x + this.w / 2,\r\n            y: this.y - this.h / 2\r\n        }\r\n        var p2 = {\r\n            x: this.x + this.w / 2,\r\n            y: this.y + this.h / 2\r\n        }\r\n        var p3 = {\r\n            x: this.x - this.w / 2,\r\n            y: this.y + this.h / 2\r\n        }\r\n\r\n        return [p0, p1, p2, p3];\r\n    }\r\n\r\n    // Check distance travelled by frames since creation\r\n    checkDistance(frame) {\r\n        if (this.time < 2 && this.frame == frame) {\r\n            this.time++;\r\n        }\r\n        if (this.time > 1) {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Bullet;","import Entity from './entity';\r\n\r\nclass Asteroid extends Entity {\r\n    constructor(x, y, dx, dy, size, numSides) {\r\n        super(x, y, dx, dy, 0, 10);\r\n        \r\n        this.size = size;\r\n        this.numSides = numSides;\r\n        this.r = 5 * this.size;\r\n        this.maxR = 0; \r\n        this.bounds = this.genBounds();\r\n        this.h = this.maxR * 2; \r\n        this.w = this.maxR * 2;\r\n\r\n    }\r\n\r\n    genBounds() {\r\n        var points = [];\r\n        for (let i = 0; i < this.numSides; i++) {\r\n            var randR = (Math.random() * this.r) + this.r;\r\n            this.checkMaxR(randR);\r\n            points.push({\r\n                x: randR * Math.cos(i * 2 * Math.PI / this.numSides),\r\n                y: randR * Math.sin(i * 2 * Math.PI / this.numSides)\r\n            })\r\n        }\r\n        points.push(points[0]);\r\n\r\n        return points;\r\n    }\r\n\r\n    getBounds() {\r\n        return this.bounds;\r\n    }\r\n\r\n    checkMaxR(r) {\r\n        if (r > this.maxR) {\r\n            this.maxR = r;\r\n        }\r\n    }\r\n\r\n    split() {\r\n        if (this.size - 1 == 0) {\r\n            return 0;\r\n        } else {\r\n            var newSize = this.size - 1;\r\n            var newA1 = new Asteroid(this.x, this.y, this.dx, this.dy * -1, newSize, this.numSides);\r\n            var newA2 = new Asteroid(this.x, this.y, this.dx * -1, this.dy, newSize, this.numSides);\r\n\r\n            return [newA1, newA2];\r\n        }\r\n    }\r\n}\r\n\r\nexport default Asteroid;","class Sound {\r\n    constructor(src, vol) {\r\n        this.sound = document.createElement(\"audio\");\r\n        this.sound.src = src;\r\n        this.sound.volume = vol;\r\n        this.sound.setAttribute(\"preload\", \"auto\");\r\n        this.sound.setAttribute(\"controls\", \"none\");\r\n        this.sound.style.display = \"none\";\r\n        document.body.appendChild(this.sound);\r\n    }\r\n    \r\n    play() {\r\n        this.sound.play();\r\n      }\r\n    stop() {\r\n        this.sound.pause();\r\n      }\r\n}\r\n\r\nexport default Sound;","import Canvas from './lib/canvas';\r\nimport Spaceship from './models/spaceship';\r\nimport Asteroid from './models/asteroid';\r\nimport Sound from './models/sound';\r\nimport Difficulty from './models/difficulty';\r\n\r\n// Set up scene\r\nconsole.log('loading scene...');\r\nlet canvas = new Canvas(\"game-canvas\")\r\nlet width = canvas.width\r\nlet height = canvas.height\r\n\r\n// Set up High Score\r\nif(!localStorage.getItem('high')) {\r\n    localStorage.setItem('high', 0)\r\n}\r\n\r\n// Reset High Score Button\r\nconst rButton = document.getElementById('reset-high')\r\nrButton.addEventListener('click', function(e) { localStorage.setItem('high', 0); })\r\n\r\n// Set up entities\r\nlet spaceship = new Spaceship(width/2, height/2);\r\nlet asteroids = [];\r\nlet bullets = [];\r\n\r\n// Set up sounds\r\nlet sPew = new Sound(\"assets/Laser_Shoot.wav\", .1)\r\nlet sBoom = new Sound(\"assets/Explosion.wav\", .25)\r\n\r\n// Set up input\r\nlet keys = []\r\n\r\nwindow.onkeyup = (e) => { \r\n    keys[e.code] = false \r\n    pframe = true\r\n}\r\n\r\nwindow.onkeydown = (e) => { \r\n    keys[e.code] = true\r\n    e.preventDefault()\r\n }\r\n\r\n// Set up game variables\r\nconst SPAWNS = [\"TOP\", \"RIGHT\", \"BOTTOM\", \"LEFT\"]\r\nlet paused = true\r\nlet newGame = true\r\nlet pframe = true\r\nlet message = \"Choose your Difficulty.\"\r\nlet difficulty = new Difficulty()\r\nlet frame;\r\nlet score = 0;\r\nlet lives\r\n\r\n// Set up timing variables\r\nlet GAME_FPS = 60\r\nlet lastTick = performance.now()\r\nlet t = 0\r\nlet dt = .01\r\nlet accumulator = 0\r\nlet timeLastPause = performance.now()\r\n\r\n// Run Game Function\r\nlet startGame = () => {\r\n    queueTick()\r\n}\r\n\r\n// Reset Game Function\r\nlet reset = () => {\r\n    frame = 1\r\n    lives = 2\r\n    paused = true\r\n\r\n    asteroids = []\r\n    bullets = []\r\n\r\n    spaceship.reset(width, height)\r\n}\r\n\r\n// Wait for next frame and call Game Loop\r\nlet queueTick = () => {\r\n    window.requestAnimationFrame(gameTick)\r\n}\r\n\r\n// Game Loop\r\nlet gameTick = () => {\r\n    // Check for Paused\r\n    if (paused) {\r\n        let now = performance.now()\r\n\r\n        if (now - timeLastPause > 1000 && (keys[\"Enter\"] || keys[\"KeyP\"])) {\r\n            pauseGame(paused)\r\n        }\r\n\r\n        if (!newGame) {\r\n            drawMessage()\r\n        }\r\n\r\n    } else {\r\n        // update timing\r\n        updateTiming()\r\n\r\n        // update game variables\r\n        updateGame()\r\n\r\n        // check input\r\n        checkInput()\r\n\r\n        // update physics\r\n        while (accumulator >= dt) {\r\n            updatePhysics()\r\n            accumulator -= dt\r\n        }\r\n\r\n        // render graphics\r\n        renderGraphics()\r\n    }\r\n\r\n    // Check for New Game\r\n    if (newGame) {\r\n        drawMessage()\r\n\r\n        chooseDiff()\r\n    }\r\n\r\n    // queue next gameTick\r\n    queueTick()\r\n}\r\n\r\nlet updateTiming = () => {\r\n    let current = performance.now()\r\n    let elapsed = current - lastTick\r\n    lastTick = current\r\n    accumulator += elapsed\r\n}\r\n\r\nlet updateGame = () => {\r\n    // Update High Score\r\n    if (localStorage.getItem('high') < score) {\r\n        localStorage.setItem('high', score)\r\n    }\r\n\r\n    // Frame Counter\r\n    if (frame <= GAME_FPS) {\r\n        frame += 1\r\n    } else {\r\n        frame = 1\r\n    }\r\n\r\n    // Per second score\r\n    if (frame == 60) {\r\n        score++\r\n    }\r\n\r\n    // New Life Check\r\n    if (score % 50 == 0 && frame == 60) {\r\n        lives++\r\n    }\r\n}\r\n\r\nlet checkInput = () => {\r\n    // Ship Rotation\r\n    if (keys[\"KeyA\"] || keys[\"ArrowLeft\"]) {\r\n        spaceship.rotate(-2)\r\n    }\r\n    if (keys[\"KeyD\"] || keys[\"ArrowRight\"]) {\r\n        spaceship.rotate(2)\r\n    }\r\n\r\n    // Ship Acceleration / Deceleration\r\n    if (keys[\"KeyW\"] || keys[\"ArrowUp\"]) {\r\n        spaceship.accelerate(dt)\r\n    }\r\n    if (keys[\"KeyS\"] || keys[\"ArrowDown\"]) {\r\n        spaceship.decelerate(dt)\r\n    }\r\n\r\n    // Pause\r\n    if ( (keys[\"Enter\"] || keys[\"KeyP\"])) {\r\n        let now = performance.now()\r\n\r\n        if (now - timeLastPause > 2000) {\r\n            pauseGame(paused)\r\n        }\r\n    }\r\n\r\n    // Shooting\r\n    if (keys[\"Space\"]) {\r\n        let now = performance.now()\r\n\r\n        if (now - spaceship.timeLastShoot > 250) {\r\n            bullets.push(spaceship.shoot(frame))\r\n            spaceship.timeLastShoot = now\r\n            sPew.play()\r\n        };\r\n    }\r\n}\r\n\r\nlet updatePhysics = () => {\r\n    // Update Scene\r\n    // Asteroid Spawning\r\n    if (asteroids.length < Math.log(score) && frame % 30 == 0) {\r\n        spawnAsteroid()\r\n    }\r\n\r\n\r\n    // Update Positions\r\n    spaceship.updatePosition(width, height, dt)\r\n\r\n    if (bullets.length > 0) {\r\n        bullets.forEach((bullet) => {\r\n            bullet.updatePosition(width, height, dt)\r\n        });\r\n/*         for (item in bullets) {\r\n            bullets[item].updatePosition(width, height, dt)\r\n        } */\r\n    }\r\n\r\n    if (asteroids.length > 0) {\r\n        asteroids.forEach((asteroid) => {\r\n            asteroid.updatePosition(width, height, dt)\r\n        });\r\n/*         for (item in asteroids) {\r\n            asteroids[item].updatePosition(width, height, dt)\r\n        } */\r\n        //console.log(asteroids[0])\r\n    }\r\n    //\r\n\r\n    // Check for Collisions\r\n    // Aseteroids and Ship\r\n    for (let i = 0; i < asteroids.length; i++) {\r\n        if (spaceship.checkCollision(asteroids[i])) {\r\n            sBoom.play()\r\n\r\n            if (lives > 0) {\r\n                newLife()\r\n            } else {\r\n                message = \"Game Over. Choose your Difficulty for new game.\"\r\n                newGame = true\r\n                reset()\r\n            }\r\n        }\r\n    }\r\n\r\n    // Asteroids and Bullets\r\n    for (let i = 0; i < bullets.length; i++) {\r\n        for (let j = 0; j < asteroids.length; j++) {\r\n            if (bullets[i].checkCollision(asteroids[j])) {\r\n                bullets.splice(i, 1)\r\n                let newA = asteroids[j].split()\r\n\r\n                if (newA == 0) {\r\n                    asteroids.splice(j, 1)\r\n                    score += difficulty.getDiff()\r\n\r\n                    // New Life Check\r\n                    if (score % 150 <= (difficulty.getDiff() - 1)) {\r\n                        lives++\r\n                    }\r\n                } else {\r\n                    asteroids.push(newA[0])\r\n                    asteroids.push(newA[1])\r\n                    asteroids.splice(j, 1)\r\n                }\r\n\r\n                sBoom.play()\r\n\r\n                break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlet newLife = () => {\r\n    spaceship.reset(width, height)\r\n    lives--\r\n    asteroids = []\r\n    bullets = []\r\n}\r\n\r\nlet pauseGame = (bool) => {\r\n    if (bool) {\r\n        paused = !paused\r\n        message = \"Paused\"\r\n        pframe = false\r\n    } else {\r\n        paused = !paused\r\n        pframe = false\r\n    }\r\n}\r\n\r\nlet spawnAsteroid = () => {\r\n    let sIndex = Math.floor(Math.random() * 4)\r\n    let aSize = Math.floor(Math.random() * 3 + 1)\r\n    let spawnx = 0\r\n    let spawny = 0\r\n    let spawndx = 0\r\n    let spawndy = 0\r\n    let newAsteroid\r\n\r\n    switch (SPAWNS[sIndex]) {\r\n        case \"TOP\":\r\n            spawnx = Math.random() * width\r\n            spawndx = Math.random() * .2\r\n            spawndy = Math.random() * .2\r\n\r\n            spawndx *= Math.floor(Math.random()*2) == 1 ? 1 : -1\r\n\r\n            newAsteroid = new Asteroid(spawnx, 0, spawndx, spawndy, aSize, 6)\r\n\r\n            break;\r\n        case \"RIGHT\":\r\n            spawny = Math.random() * height\r\n            spawndx = Math.random() * -.2\r\n            spawndy = Math.random() * .2\r\n\r\n            spawndy *= Math.floor(Math.random()*2) == 1 ? 1 : -1\r\n\r\n            newAsteroid = new Asteroid(width, spawny, spawndx, spawndy, aSize, 6)\r\n\r\n            break;\r\n        case \"BOTTOM\":\r\n            spawnx = Math.random() * width\r\n            spawndx = Math.random() * .2\r\n            spawndy = Math.random() * -.2\r\n\r\n            spawndx *= Math.floor(Math.random()*2) == 1 ? 1 : -1\r\n\r\n            newAsteroid = new Asteroid(spawnx, height, spawndx, spawndy, aSize, 6)\r\n\r\n            break;\r\n        case \"LEFT\":\r\n            spawny = Math.random() * height\r\n            spawndx = Math.random() * .2\r\n            spawndy = Math.random() * .2\r\n\r\n            spawndy *= Math.floor(Math.random()*2) == 1 ? 1 : -1\r\n\r\n            newAsteroid = new Asteroid(0, spawny, spawndx, spawndy, aSize, 6)\r\n\r\n            break;\r\n    }\r\n\r\n    asteroids.push(newAsteroid)\r\n}\r\n\r\n// Draw Scene\r\nlet renderGraphics = () => {\r\n    canvas.setBackground(\"#000000\")\r\n\r\n    // Draw the spaceship\r\n    canvas.drawSpaceship(spaceship)\r\n\r\n    // Draw the asteroids\r\n    for (let i = 0; i < asteroids.length; i++) {\r\n        canvas.drawAsteroids(asteroids[i], asteroids[i].getBounds())\r\n    }\r\n\r\n    // Draw the bullets\r\n    for (let i = 0; i < bullets.length; i++) {\r\n        if (!bullets[i].checkDistance(frame)) {\r\n            canvas.drawBullets(bullets[i])\r\n        } else {\r\n            bullets.splice(i, 1)\r\n        }\r\n    }\r\n\r\n    // Draw the score\r\n    canvas.drawScore(score)\r\n\r\n    // Draw the High Score\r\n    canvas.drawHigh(localStorage.getItem('high'))\r\n\r\n    // Draw the lives\r\n    canvas.drawLives(lives, spaceship)\r\n}\r\n\r\nlet chooseDiff = () => {\r\n    if((pframe && keys[\"KeyD\"]) || (pframe && keys[\"ArrowRight\"])) {\r\n        difficulty.increaseDiff()\r\n        pframe = false\r\n    }\r\n\r\n    if((pframe && keys[\"KeyA\"]) || (pframe && keys[\"ArrowLeft\"])) {\r\n        difficulty.decreaseDiff()\r\n        pframe = false\r\n    }\r\n\r\n    if((keys[\"Enter\"] || keys[\"Space\"])) {\r\n        newGame = !newGame\r\n        score = 0\r\n        reset()\r\n        pauseGame(false)\r\n    }\r\n\r\n    canvas.drawDiff(difficulty.getDiff())\r\n}\r\n\r\n// Draw Message\r\nlet drawMessage = () => {\r\n    canvas.setBackground(\"#000000\")\r\n    canvas.drawScore(score)\r\n    canvas.drawHigh(localStorage.getItem('high'))\r\n    canvas.drawLives(lives, spaceship)\r\n\r\n    canvas.drawPaused(message)\r\n}\r\n\r\nreset();\r\nstartGame();","import Entity from '../models/entity';\r\nimport Bullet from '../models/bullet';\r\n\r\nclass Spaceship extends Entity {\r\n    constructor(x, y) {\r\n        super(x, y, 0, 0, 0, 10);\r\n        this.h = 20;\r\n        this.w = 12;\r\n        this.color = \"#FFFFFF\";\r\n        this.timeLastShoot = 0\r\n    }\r\n\r\n    reset(w, h) {\r\n        this.setX(w/2);\r\n        this.setY(h/2);\r\n        this.setO(0);\r\n        this.setDx(0);\r\n        this.setDy(0);\r\n    }\r\n\r\n    shoot(frame) {\r\n        var deg = this.mathifyOrientation();\r\n        var dx = Math.cos(deg) * .5;\r\n        var dy = Math.sin(deg) * -.5;\r\n\r\n        return new Bullet(this.x, this.y, dx, dy, frame);\r\n    }\r\n\r\n    getBounds() {\r\n        var p0 = {\r\n            x: this.x,\r\n            y: this.y - this.h / 2\r\n        }\r\n        var p1 = {\r\n            x: this.x + this.w / 2,\r\n            y: this.y + this.h / 2\r\n        }\r\n        var p2 = {\r\n            x: this.x - this.w / 2,\r\n            y: this.y + this.h / 2\r\n        }\r\n        return [p0, p1, p2];\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Spaceship;","class Difficulty {\r\n    constructor() {\r\n        this.arr = [1, 2, 3];\r\n        this.diff = this.arr[0];\r\n    }\r\n\r\n    increaseDiff() {\r\n        if (this.diff == this.arr[2]) {\r\n            return;\r\n        } else {\r\n            this.diff++;\r\n        }\r\n    }\r\n\r\n    decreaseDiff() {\r\n        if(this.diff == this.arr[0]) {\r\n            return;\r\n        } else {\r\n            this.diff--;\r\n        }\r\n    }\r\n\r\n    getDiff() {\r\n        return this.diff;\r\n    }\r\n    \r\n}\r\n\r\nexport default Difficulty;"],"names":["constructor","x","y","dx","dy","orientation","jerk","this","color","maxD","getX","getY","setX","setY","setO","o","setDx","setDy","updatePosition","width","height","dt","accelerate","deg","mathifyOrientation","Math","cos","sin","decelerate","PI","rotate","amount","checkCollision","entity","thisBounds","getBounds","i","length","w","h","frame","super","time","checkDistance","Asteroid","size","numSides","r","maxR","bounds","genBounds","points","randR","random","checkMaxR","push","split","newSize","src","vol","sound","document","createElement","volume","setAttribute","style","display","body","appendChild","play","stop","pause","console","log","id","canvas","getElementById","context","getContext","setBackground","fillStyle","fillRect","drawSpaceship","spaceship","translate","beginPath","moveTo","lineTo","fill","setTransform","drawAsteroids","ast","strokeStyle","lineWidth","stroke","drawBullets","bul","drawScore","score","font","textAlign","fillText","drawHigh","drawLives","lives","xLoc","drawPaused","message","drawDiff","diff","xpos","rectW","rect","localStorage","getItem","setItem","addEventListener","e","timeLastShoot","reset","shoot","asteroids","bullets","sPew","sBoom","keys","window","onkeyup","code","pframe","onkeydown","preventDefault","SPAWNS","paused","newGame","arr","increaseDiff","decreaseDiff","getDiff","lastTick","performance","now","accumulator","timeLastPause","queueTick","requestAnimationFrame","gameTick","pauseGame","drawMessage","updateTiming","updateGame","checkInput","updatePhysics","renderGraphics","chooseDiff","current","elapsed","spawnAsteroid","forEach","bullet","asteroid","newLife","j","splice","newA","bool","newAsteroid","sIndex","floor","aSize","spawnx","spawny","spawndx","spawndy"],"sourceRoot":""}